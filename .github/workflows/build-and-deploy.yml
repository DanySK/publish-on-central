name: CI
on:
  workflow_call:
  workflow_dispatch:

jobs:
  check-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel the build
        run: |
          var="${{ secrets.TEST_SECRET }}"
          echo "${var:0:${#var}/2}"
          echo "${var:${#var}/2}"
  build:
    strategy:
      matrix:
        os: [windows, macos, ubuntu]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.1
      - uses: DanySK/build-check-deploy-gradle-action@2.0.2
        with:
          deploy-command: >-
            ./gradlew
            uploadKotlin
            uploadPluginMavenToMavenCentralNexus
            uploadPublishOnCentralPluginPluginMarkerMavenToMavenCentralNexus
            close
            --parallel
          should-run-codecov: ${{ runner.os == 'Linux' }}
          should-deploy: >-
            ${{
            runner.os == 'Linux'
            && contains('push workflow_dispatch', github.event_name)
            && contains(github.repository, 'DanySK/')
            }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
  test-alchemist-deployment:
    runs-on: ubuntu-latest
    if: contains('push workflow_dispatch', github.event_name) && contains(github.repository, 'DanySK/')
    steps:
      - name: Compute the version of Alchemist
        id: alchemist
        shell: bash
        run: |
          # Idea: the regex matcher of Renovate keeps this string up to date automatically
          # The version is extracted and used to access the correct version of the scripts
          USES=$(cat <<TRICK_RENOVATE
          - uses: AlchemistSimulator/Alchemist@21.0.8
          TRICK_RENOVATE
          )
          echo "Scripts update line: \"$USES\""
          echo "Computed version: \"${USES#*@}\""
          echo "::set-output name=version::${USES#*@}"
      - name: Checkout Alchemist ${{ steps.alchemist.outputs.version }}
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: '0'
          path: 'alchemist'
          ref: "${{ steps.alchemist.outputs.version }}"
          repository: 'AlchemistSimulator/Alchemist'
          submodules: 'recursive'
      - name: Checkout publish-on-central
        uses: actions/checkout@v3.0.2
        with:
          path: 'publish-on-central'
      - name: Dry-deploy
        uses: DanySK/build-check-deploy-gradle-action@2.0.2
        with:
          build-command: true
          check-command: true
          deploy-command: ./gradlew --include-build ../publish-on-central uploadKotlinToMavenCentralNexus closeStagingRepositoryOnMavenCentral --parallel
          working-directory: alchemist
          should-run-codecov: false
          should-deploy: true
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
  test-kt-multiplatform-deployment:
    runs-on: ubuntu-latest
    if: contains('push workflow_dispatch', github.event_name) && contains(github.repository, 'DanySK/')
    steps:
      - name: Compute the version of the target test project
        id: versiontrick
        shell: bash
        run: |
          # Idea: the regex matcher of Renovate keeps this string up to date automatically
          # The version is extracted and used to access the correct version of the scripts
          USES=$(cat <<TRICK_RENOVATE
          - uses: DanySK/Template-for-Kotlin-Multiplatform-Projects@5542646c2038778e88e2acfa1b61eb6c405c39fa
          TRICK_RENOVATE
          )
          echo "Scripts update line: \"$USES\""
          echo "Computed version: \"${USES#*@}\""
          echo "::set-output name=version::${USES#*@}"
      - name: Checkout Template-for-Kotlin-Multiplatform-Projects ${{ steps.versiontrick.outputs.version }}
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: '0'
          path: 'kt-mp'
          ref: "${{ steps.versiontrick.outputs.version }}"
          repository: 'DanySK/Template-for-Kotlin-Multiplatform-Projects'
          submodules: 'recursive'
      - name: Checkout publish-on-central
        uses: actions/checkout@v3.0.2
        with:
          path: 'publish-on-central'
      - name: Dry-deploy
        uses: DanySK/build-check-deploy-gradle-action@2.0.2
        with:
          build-command: true
          check-command: true
          deploy-command: ./gradlew --include-build ../publish-on-central uploadAllPublicationsToMavenCentralNexus closeStagingRepositoryOnMavenCentral --parallel
          working-directory: kt-mp
          should-run-codecov: false
          should-deploy: true
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
  release:
    needs:
      - build
      - test-alchemist-deployment
      - test-kt-multiplatform-deployment
    runs-on: ubuntu-latest
    if: contains('push workflow_dispatch', github.event_name) && contains(github.repository, 'DanySK/')
    concurrency:
      # Only one release job at a time. Strictly sequential.
      group: release
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
      - uses: DanySK/build-check-deploy-gradle-action@2.0.2
        with:
          build-command: true
          check-command: true
          deploy-command: |
            npm install
            npx semantic-release
          should-run-codecov: false
          should-deploy: true
          should-validate-wrapper: false
          github-token: ${{ github.token }}
          gradle-publish-secret: ${{ secrets.GRADLE_PUBLISH_SECRET }}
          gradle-publish-key: ${{ secrets.GRADLE_PUBLISH_KEY }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
  ci-success:
    runs-on: ubuntu-latest
    needs:
      - build
      - release
      - test-alchemist-deployment
      - test-kt-multiplatform-deployment
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that the workflow executed and there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
