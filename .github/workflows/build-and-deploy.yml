name: CI/CD Process
on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows, macos, ubuntu]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Decide whether to release development versions
        id: release-dev
        run: echo "release=true" >> $GITHUB_OUTPUT
      - name: Checkout
        uses: DanySK/action-checkout@0.2.22
      - uses: DanySK/build-check-deploy-gradle-action@3.7.18
        with:
          check-command: true
          deploy-command: |
            ./gradlew publishAllPublicationsToProjectLocalRepository zipMavenCentralPortalPublication releaseStagingRepositoryOnMavenCentral
          should-run-codecov: ${{ runner.os == 'Linux' }}
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
          should-deploy: ${{ runner.os == 'Linux' && steps.release-dev.outputs.release == 'true' }}
          gradle-publish-secret: ${{ secrets.GRADLE_PUBLISH_SECRET }}
          gradle-publish-key: ${{ secrets.GRADLE_PUBLISH_KEY }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
      - uses: actions/upload-artifact@v4.6.2
        if: ${{ runner.os == 'Linux' }}
        with:
          name: gradle-home
          include-hidden-files: true
          path: ~/.gradle
      - uses: actions/upload-artifact@v4.6.2
        if: ${{ runner.os == 'Linux' }}
        with:
          name: local-repo-cache
          include-hidden-files: true
          path: |
            .gradle
            .kotlin

  release:
    needs:
      - build
    runs-on: ubuntu-latest
    if: >-
      !github.event.repository.fork
      && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository)
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
      - name: Restore the Gradle Home
        uses: actions/download-artifact@v4.3.0
        with:
          name: gradle-home
          path: ~/.gradle
      - name: Display structure of the Gradle Home
        run: ls ~/.gradle
      - name: Restore the Local Repository Cache
        uses: actions/download-artifact@v4.3.0
        with:
          name: local-repo-cache
      - name: Install Node
        uses: actions/setup-node@v4.4.0
        with:
          node-version-file: package.json
      - uses: DanySK/build-check-deploy-gradle-action@3.7.18
        with:
          build-command: true
          check-command: true
          deploy-command: |
            npm install
            npx semantic-release
          should-run-codecov: false
          should-deploy: true
          should-validate-wrapper: false
          github-token: ${{ github.token }}
          gradle-publish-secret: ${{ secrets.GRADLE_PUBLISH_SECRET }}
          gradle-publish-key: ${{ secrets.GRADLE_PUBLISH_KEY }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
  success:
    runs-on: ubuntu-latest
    needs:
      - build
      - release
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that the workflow executed and there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
